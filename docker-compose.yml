services:
  nginx:
    build:
      target: nginx
    volumes:
      - media-data:/usr/share/nginx/media:ro
    ports:
      - 80:80
    depends_on:
      backend:
        condition: service_healthy
  backend:
    environment:
      BACKEND_SETTING_DATABASES: '{"default":{"HOST":"db"}}'
      BACKEND_SETTING_CELERY_BROKER_URL: "redis://broker:6379/1"
      BACKEND_SETTING_CACHES: '{"default":{"LOCATION":"redis://broker:6379/2"}}'
      BACKEND_SETTING_CHANNEL_LAYERS: '{"default":{"CONFIG":{"hosts":[{"address":"redis://broker:6379/3"}]}}}'
    build: ./backend/
    command: ./scripts/run_django.sh
    env_file:
      - .env
    volumes:
      - media-data:/usr/src/app/media
    depends_on:
      db:
        condition: service_healthy
        restart: true
      broker:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/"]
      start_period: 60s
      interval: 60s
      timeout: 10s
      retries: 10
  celery:
    build: ./backend/
    command: ./scripts/run_celery.sh
    volumes:
      - media-data:/usr/src/app/media
    depends_on:
      db:
        condition: service_healthy
        restart: true
      broker:
        condition: service_started
  db:
    image: postgres:17.4-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: dzencode
      POSTGRES_USER: dzencode
      POSTGRES_PASSWORD: dzencode
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dzencode -d dzencode"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  broker:
    image: redis:8.0-alpine
volumes:
  postgres-data:
    driver: local
  media-data:
